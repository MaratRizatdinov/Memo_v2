{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://memo/webpack/bootstrap","webpack://memo/webpack/runtime/define property getters","webpack://memo/webpack/runtime/hasOwnProperty shorthand","webpack://memo/./src/components/selectPage/selectPage.ts","webpack://memo/./src/components/gamePage/helpers/createCards.ts","webpack://memo/./src/components/gamePage/helpers/renderCards.ts","webpack://memo/./src/scripts/createTimeString.ts","webpack://memo/./src/components/gamePage/gamePage.ts","webpack://memo/./src/components/modalGameOver/renderModal.ts","webpack://memo/./src/components/gamePage/renderCardsBlock.ts","webpack://memo/./src/components/gamePage/helpers/createCollection.ts","webpack://memo/./src/scripts/createDeck.ts","webpack://memo/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { appRouter } from '../../index';\nexport const selectPage = (state) => {\n    const appEl = document.getElementById('app');\n    const pageContent = `\n        <div class=\"select\">\n          <div class=\"select__title\">Выбери сложность</div>\n          <div class=\"select__items\">      \n            <input type=\"radio\" id=\"radio1\" name=\"radios\" value=\"radio1\" checked>\n            <label for=\"radio1\" class ='select__label'>1</label>\n            \n            <input type=\"radio\" id=\"radio2\" name=\"radios\" value=\"radio2\">\n            <label for=\"radio2\" class ='select__label'>2</label>\n            \n            <input type=\"radio\" id=\"radio3\" name=\"radios\" value=\"radio3\">\n            <label for=\"radio3\" class ='select__label'>3</label>\n          </div>\n          <div class=\"select__button\">Старт</div>\n        </div>\n        `;\n    appEl.innerHTML = pageContent;\n    //--------------------------------------\n    const inputElements = document.querySelectorAll('.select__label');\n    for (let elem of inputElements) {\n        elem.addEventListener('click', (event) => {\n            event.stopPropagation();\n            const target = event.target;\n            state.gameLevel = target.textContent\n                ? Number(target.textContent)\n                : 1;\n        });\n    }\n    //-------------------------------------\n    const buttonElement = document.querySelector('.select__button');\n    buttonElement === null || buttonElement === void 0 ? void 0 : buttonElement.addEventListener('click', () => {\n        state.page = 'gamePage';\n        appRouter(state);\n    });\n};\n","const suitPictures = {\n    S: ['./static/images/Spades.svg', './static/images/SpadesBig.svg'],\n    H: ['./static/images/Hearts.svg', './static/images/HeartsBig.svg'],\n    D: ['./static/images/Diamonds.svg', './static/images/DiamondsBig.svg'],\n    C: ['./static/images/Clubs.svg', './static/images/ClubsBig.svg'],\n};\nexport const createCard = (gameCardsArray) => {\n    let content = '';\n    let index = 0;\n    for (let key of gameCardsArray) {\n        let [value, suit, status] = key.split('');\n        if (status === 'C') {\n            content =\n                content +\n                    `<div class=\"game__card card__close\" data-index =${index} data-id =${key} ></div>`;\n        }\n        else {\n            content =\n                content +\n                    `<div class=\"game__card card__open\" data-index =${index} data-id =${key} >\n                <div class=\"card__top\">\n                    <div class=\"card__value\">${value === 'X' ? '10' : value}</div>\n                    <img class=\"card__suit\" src=${suitPictures[suit][0]} />\n                </div>\n                <div class=\"card__center\">\n                    <img src=${suitPictures[suit][1]} />\n                </div>\n                <div class=\"card__bottom\">\n                    <div class=\"card__value\">${value === 'X' ? '10' : value}</div>\n                    <img class=\"card__suit\" src=${suitPictures[suit][0]} />\n                </div>                \n            </div>`;\n        }\n        index++;\n    }\n    return content;\n};\n","import { appRouter } from '../../..';\nimport { createCard } from './createCards';\n//------------------------------------------------------------------------\nconst isEqual = ([...arr], cards) => {\n    if (arr.length === cards)\n        return [new Date().getTime(), 'win'];\n    if (arr.length % 2 !== 0)\n        return false;\n    if (arr[arr.length - 2] === arr[arr.length - 1])\n        return false;\n    return [new Date().getTime(), 'loss'];\n};\n//------------------------------------------------------------------------\nexport const renderCards = (cardsField, gameCardsArray, checkArr, state) => {\n    cardsField.innerHTML = createCard(gameCardsArray);\n    const cardElements = document.querySelectorAll('.game__card');\n    for (let elem of cardElements) {\n        elem.addEventListener('click', () => {\n            if (!elem.dataset.index)\n                return;\n            const target = gameCardsArray[Number(elem.dataset.index)];\n            if (target.slice(-1) === 'O')\n                return;\n            checkArr.push(target);\n            const result = isEqual(checkArr, state.gameCards);\n            if (result) {\n                state.gameTime = result[0] - state.gameTime;\n                state.gameResult = result[1];\n                state.gameLevel = 4;\n                appRouter(state);\n            }\n            gameCardsArray[Number(elem.dataset.index)] =\n                target.slice(0, 2) + 'O';\n            renderCards(cardsField, gameCardsArray, checkArr, state);\n        });\n    }\n};\n","// Пребразуем миллисекунды в формат \"00 мин 00 сек\"\nexport const createTimeString = (milliseconds) => {\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0');\n    };\n    let seconds = Math.floor(milliseconds / 1000);\n    let showSeconds = seconds < 60 ? seconds : seconds - 60 * Math.floor(seconds / 60);\n    let minutes = Math.floor(seconds / 60);\n    minutes = minutes % 60;\n    return `${padTo2Digits(minutes)}.${padTo2Digits(showSeconds)}`;\n};\n","import { appRouter } from '../../index';\nimport { renderCardsBlock } from './renderCardsBlock';\nimport { renderModal } from '../modalGameOver/renderModal';\nimport { createTimeString } from '../../scripts/createTimeString';\nexport const gamePage = (state) => {\n    const appEl = document.getElementById('app');\n    //-----------------------------------------------------------------------\n    const pageContent = `\n    \n                <div class=\"game__container\">             \n                    <div class=\"game__header\">\n                        <div class=\"game__timer\">\n                            <div class=\"game__timertitle\">\n                                <div class=\"game__timerdesc\">min</div>\n                                <div class=\"game__timerdesc\">sec</div>\n                            </div>\n                            <div class=\"game__tablo\">${createTimeString(0)}</div>\n                        </div>\n                        <div class=\"game__button\">Начать заново</div>\n                    </div>\n                    <div class=\"game__cards\"></div>\n                </div>\n                <div class=\"modal\"><div>  \n     `;\n    appEl.innerHTML = pageContent;\n    //-------------------------------------------------------------------\n    const containerEl = document.querySelector('.game__container');\n    const modalElement = document.querySelector('.modal');\n    const tabloElement = document.querySelector('.game__tablo');\n    if (state.gameLevel === 4) {\n        containerEl.style.opacity = '0.5';\n        modalElement.style.display = 'flex';\n        renderModal(state, modalElement);\n    }\n    else {\n        containerEl.style.opacity = '1';\n        modalElement.style.display = 'none';\n        setTimeout(() => {\n            const start = Number(new Date().getTime());\n            setInterval(() => {\n                const date = Number(new Date().getTime());\n                tabloElement.textContent = createTimeString(date - start);\n            }, 1000);\n        }, state.timeOut);\n    }\n    //-------------------------------------------------------------------\n    const cardsField = document.querySelector('.game__cards');\n    renderCardsBlock(state, cardsField);\n    //---------------------------------------------------------------------\n    const buttonElement = document.querySelector('.game__button');\n    buttonElement.addEventListener('click', () => {\n        state.gameLevel = 1;\n        state.page = 'selectPage';\n        appRouter(state);\n    });\n};\n","import { appRouter } from '../..';\nimport { createTimeString } from '../../scripts/createTimeString';\nexport const renderModal = (state, modalElement) => {\n    const gameTime = createTimeString(state.gameTime);\n    const content = `\n    <div class=\"modal__img\">\n        <img src=${state.gameResult === 'win' ? '/static/images/WinImage.svg' : '/static/images/LossImage.svg'} />\n    </div>\n    <div class=\"modal__title\">${state.gameResult === 'win' ? 'Вы выиграли!' : 'Вы проиграли!'}</div>\n    <div class=\"modal__timetitle\">Затраченное время:</div>\n    <div class=\"modal__time\">${gameTime}</div>\n    <div class=\"modal__button\">Играть снова</div>\n    `;\n    modalElement.innerHTML = content;\n    const buttonElement = document.querySelector('.modal__button');\n    buttonElement.addEventListener('click', () => {\n        state.gameLevel = 1;\n        state.gameTime = 0;\n        state.page = 'selectPage';\n        state.gameResult = '';\n        appRouter(state);\n    });\n};\n","import { createCollection } from './helpers/createCollection';\nimport { createCard } from './helpers/createCards';\nimport { renderCards } from './helpers/renderCards';\nexport const renderCardsBlock = (state, cardsField) => {\n    cardsField.style.gridTemplateColumns = `repeat(${state.gameColumns}, 95px)`;\n    let gameCardsArray = createCollection(state.gameCards);\n    const checkArr = [];\n    cardsField.innerHTML = createCard(gameCardsArray);\n    setTimeout(() => {\n        gameCardsArray = gameCardsArray.map((elem) => (elem = elem.slice(0, 2) + 'C'));\n        state.gameTime = Number(new Date().getTime());\n        renderCards(cardsField, gameCardsArray, checkArr, state);\n    }, state.timeOut);\n};\n","import { createDeck } from '../../../scripts/createDeck';\nexport const createCollection = (cardsCount) => {\n    const shuffledDeck = createDeck().sort(() => 0.5 - Math.random());\n    const gameCards = shuffledDeck.slice(0, cardsCount / 2);\n    return [...gameCards, ...gameCards].sort(() => 0.5 - Math.random());\n};\n","export const createDeck = () => {\n    const suits = ['S', 'H', 'D', 'C'];\n    const values = ['6', '7', '8', '9', 'X', 'J', 'Q', 'K', 'A'];\n    const deck = [];\n    for (let suit of suits) {\n        for (let value of values) {\n            deck.push(value + suit + 'O'); // Последний символ обозначает статус карты- О(открытая карта), C (закрытая карта)\n        }\n    }\n    return deck;\n};\n","import { selectPage } from './components/selectPage/selectPage';\nimport { gamePage } from './components/gamePage/gamePage';\nimport './styles/styles.css';\nconst state = {\n    page: 'selectPage',\n    gameLevel: 1,\n    gameParams: [\n        { id: 1, columns: 3, cards: 6, timeOut: 5000 },\n        { id: 2, columns: 4, cards: 12, timeOut: 5000 },\n        { id: 3, columns: 6, cards: 18, timeOut: 5000 },\n        { id: 4, columns: 9, cards: 36, timeOut: 0 },\n    ],\n    get gameColumns() {\n        return this.gameParams[this.gameLevel - 1].columns;\n    },\n    get gameCards() {\n        return this.gameParams[this.gameLevel - 1].cards;\n    },\n    get timeOut() {\n        return this.gameParams[this.gameLevel - 1].timeOut;\n    },\n    gameTime: 0,\n    gameResult: '',\n};\nexport const appRouter = (state) => {\n    if (state.page === 'selectPage') {\n        selectPage(state);\n    }\n    else if (state.page === 'gamePage') {\n        gamePage(state);\n    }\n};\nappRouter(state);\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","suitPictures","S","H","D","C","createCard","gameCardsArray","content","index","value","suit","status","split","isEqual","arr","cards","length","Date","getTime","renderCards","cardsField","checkArr","state","innerHTML","cardElements","document","querySelectorAll","elem","addEventListener","dataset","target","Number","slice","push","result","gameCards","gameTime","gameResult","gameLevel","appRouter","createTimeString","milliseconds","padTo2Digits","num","toString","padStart","seconds","Math","floor","showSeconds","minutes","gamePage","appEl","getElementById","pageContent","containerEl","querySelector","modalElement","tabloElement","style","opacity","display","page","renderModal","setTimeout","start","setInterval","date","textContent","timeOut","gridTemplateColumns","gameColumns","cardsCount","suits","values","deck","createDeck","sort","random","createCollection","map","renderCardsBlock","inputElements","event","stopPropagation","buttonElement","selectPage","gameParams","id","columns","this"],"sourceRoot":""}